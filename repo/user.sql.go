// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: user.sql

package repo

import (
	"context"

	"github.com/google/uuid"
)

const checkUsername = `-- name: CheckUsername :one
select exists (select 1 from users where username = $1 for update)
`

func (q *Queries) CheckUsername(ctx context.Context, username string) (bool, error) {
	row := q.queryRow(ctx, q.checkUsernameStmt, checkUsername, username)
	var exists bool
	err := row.Scan(&exists)
	return exists, err
}

const insertUser = `-- name: InsertUser :exec
insert into users (id, name, username, credentials_id)
values ($1, $2, $3, $4)
`

type InsertUserParams struct {
	ID            uuid.UUID
	Name          string
	Username      string
	CredentialsID uuid.UUID
}

func (q *Queries) InsertUser(ctx context.Context, arg InsertUserParams) error {
	_, err := q.exec(ctx, q.insertUserStmt, insertUser,
		arg.ID,
		arg.Name,
		arg.Username,
		arg.CredentialsID,
	)
	return err
}
